
public class encode {

	int i=0;
	protected void encode()
	{
		int [][] dataCache,tempMatrix1,tempMatrix2;//原数据，水平校验位的数据值的转置数据，对角线校验位的数据值的转置数据		
	//	getColumnData(pictureIncomp[] obj,int i);//从对象数组中获取某列的方法
//		tempMatrix1=new int[tempMemory[0].getColumn()][tempMemory.getRow()];//暂存运算过程中水平校验位的数据值的转置数据
//		tempMatrix2=new int[tempMemory[0].getColumn()][tempMemory.getRow()];//暂存运算过程中对角线校验位的数据值的转置数据
//	    int[][] temp=[tempMemory[0].getRow()][tempMemory.getColumn()];//充当数组转置时的临时变量
//	    dataCache=[tempMemory[0].getRow()][tempMemory.length];
//	    for(int i=0;i<tempMemory.length;i++)
//	    {
//	    	dataCache = super.getColumnData(tempMemory,i)//获得对象元素中的数据中的每一列，组成一个数组
//	    			tempMatrix1[i]=super.horiEcclusive_OR(dataCache);//获得水平校验（公式（3））
//	    	        tempMatrix2[i]=super.diagExclusive_OR(dataCache,encodong.getCommonFactor(dataCache));//获得对角线校验数据（公式（3））
//	    }
//	    //将修复的数据存入对象
//	    super.matrixTransposition(tempMatrix1,temp);//恢复原数据格式将数组转置
//	    horiRedun=new pictureInComp(temp);//水平冗余校验对象实例化
//	    super.matrixTransposition(tempMatrix2,temp);
//	    diagRedun=new pictureInComp(temp);
	
	}
}
